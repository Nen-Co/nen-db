name: CI - Windows

on:
  push:
    branches: [ main, feature/data-oriented-design ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        zig-version: ['0.15.1']
        target: ['native', 'x86_64-windows-gnu', 'x86_64-windows-msvc']
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Zig ${{ matrix.zig-version }}
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: ${{ matrix.zig-version }}
    
    - name: Setup MSVC (for msvc target)
      if: contains(matrix.target, 'msvc')
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Create nen-io symlink
      shell: powershell
      run: |
        cd ..
        git clone https://github.com/Nen-Co/nen-io.git
        git clone https://github.com/Nen-Co/nen-json.git  
        git clone https://github.com/Nen-Co/nen-net.git
    
    - name: Verify Zig installation
      run: |
        zig version
        zig env
        
    - name: Clean cache
      shell: powershell
      run: |
        Remove-Item -Recurse -Force .zig-cache -ErrorAction SilentlyContinue
        Remove-Item -Recurse -Force zig-out -ErrorAction SilentlyContinue
    
    - name: Build (Debug)
      run: |
        zig build -Dtarget=${{ matrix.target }} -Doptimize=Debug
    
    - name: Build (ReleaseSafe)  
      run: |
        zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSafe
        
    - name: Build (ReleaseFast)
      run: |
        zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseFast

    - name: Run unit tests
      if: matrix.target == 'native'
      run: |
        zig build test-unit

    - name: Run TCP tests
      if: matrix.target == 'native'
      run: |
        zig build test-tcp

    - name: Run performance tests (with timeout)
      if: matrix.target == 'native'
      shell: powershell
      run: |
        $job = Start-Job -ScriptBlock { zig build test-performance }
        Wait-Job $job -Timeout 30
        if ($job.State -eq "Running") {
          Stop-Job $job
          Write-Output "Performance tests timed out (expected)"
        } else {
          Receive-Job $job
        }

    - name: Test Windows socket functionality
      if: matrix.target == 'native'
      run: |
        zig build tcp-debug || echo "TCP debug completed"

    - name: Verify binaries
      if: matrix.target == 'native'
      shell: powershell
      run: |
        Get-ChildItem zig-out/bin/ -Recurse
        & "./zig-out/bin/nendb.exe" --help 2>$null || Write-Output "CLI help displayed"
        
    - name: Test memory usage
      if: matrix.target == 'native'
      run: |
        zig build memory-analysis || echo "Memory analysis completed"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nendb-windows-${{ matrix.target }}
        path: |
          zig-out/bin/*
          CLEANUP_REPORT.md
          ECOSYSTEM_CLEANUP_REPORT.md
